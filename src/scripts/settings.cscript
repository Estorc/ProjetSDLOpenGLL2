#include "../raptiquax.h"
#include "../math/math_util.h"
#include "../io/model.h"
#include "../storage/node.h"
#include "../settings.h"
#include "../window.h"
#include "../gui/frame.h"
#include "../storage/queue.h"
#include "../scripts/scripts.h"
#include "../classes/classes.h"


NEW_SCRIPT(settings_go_to_main)
    SET_ATTRIBUTES_COUNT(1);
    Frame *frame = (Frame*) this->object;
    Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &this->attribute[0].b;
    if (*button->checked)
        prepare_change_scene("assets/scenes/settings/main.scene");
END_SCRIPT(settings_go_to_main)

NEW_SCRIPT(settings_go_to_graphics)
    SET_ATTRIBUTES_COUNT(1);
    Frame *frame = (Frame*) this->object;
    Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &this->attribute[0].b;
    if (*button->checked)
        prepare_change_scene("assets/scenes/settings/graphics.scene");
END_SCRIPT(settings_go_to_graphics)

NEW_SCRIPT(settings_go_to_audio)
    SET_ATTRIBUTES_COUNT(1);
    Frame *frame = (Frame*) this->object;
    Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &this->attribute[0].b;
    if (*button->checked)
        prepare_change_scene("assets/scenes/settings/audio.scene");
END_SCRIPT(settings_go_to_audio)

NEW_SCRIPT(st_show_fps)
	GET_READY_PARAMETERS();
    Frame *frame = (Frame*) this->object;
	Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &settings.show_fps;
END_SCRIPT(st_show_fps)


NEW_SCRIPT(st_cast_shadows)
	GET_READY_PARAMETERS();
    Frame *frame = (Frame*) this->object;
    Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &settings.cast_shadows;
END_SCRIPT(st_cast_shadows)

NEW_SCRIPT(st_fullscreen)
	GET_READY_PARAMETERS();
    Frame *frame = (Frame*) this->object;
    Button *button = (Button*) frame->button;
    if (!button->checked) button->checked = &settings.window_fullscreen;
    if (settings.window_fullscreen) {
        SDL_SetWindowFullscreen(window.sdl_window, SDL_WINDOW_FULLSCREEN_DESKTOP);
    } else {
        SDL_SetWindowFullscreen(window.sdl_window, 0);
    }
END_SCRIPT(st_fullscreen)

NEW_SCRIPT(st_res)
	GET_READY_PARAMETERS();
    SET_ATTRIBUTES_COUNT(1);
    int *oldRes = &this->attribute[0].i;

    Frame *frame = (Frame*) this->object;
    SelectList *selectList = frame->selectList;
    selectList->selected = &settings.resolution;
    if (selectList->count == 1 && !(frame->flags & FRAME_NEEDS_REFRESH)) {
        selectList->options = (char (*)[256]) resolutionsText;
        selectList->count = RES_COUNT;
        this::refreshOptions();
    }
    if (*oldRes != settings.resolution) {
        queue_push(&callQueue, refresh_resolution);
    }
    *oldRes = settings.resolution;
END_SCRIPT(st_res)