#include "../raptiquax.h"
#include "../math/math_util.h"
#include "../storage/node.h"
#include "../render/camera.h"
#include "../gui/frame.h"
#include "../storage/queue.h"
#include "../utils/scene.h"

NEW_SCRIPT(title_screen_camera)
	GET_READY_PARAMETERS();

	this->rot[1] += 1.0f;
	const float distance = 25.0f;
	glm_vec3_copy((vec3) {sin(to_radians(this->rot[1]))*distance, 5.0f, cos(to_radians(this->rot[1]))*distance}, this->pos);

END_SCRIPT(title_screen_camera)


NEW_SCRIPT(play_game_button)
	GET_READY_PARAMETERS();
	SET_ATTRIBUTES_COUNT(1);

	bool *active = &this->attribute[0].b;

	Frame *frame = (Frame*) this->object;
	Button *button = (Button*) frame->button;

	if (!button->checked) button->checked = active;

	if ((*button->checked)) {
		
		prepare_change_scene("assets/scenes/fpschess.scene");
		*button->checked = false;
	}

END_SCRIPT(play_game_button)


NEW_SCRIPT(settings_game_button)
	GET_READY_PARAMETERS();
	SET_ATTRIBUTES_COUNT(1);

	bool *active = &this->attribute[0].b;

	Frame *frame = (Frame*) this->object;
	Button *button = (Button*) frame->button;

	if (!button->checked) button->checked = active;

	if ((*button->checked)) {
		
		prepare_change_scene("assets/scenes/settings/main.scene");
		*button->checked = false;
	}

END_SCRIPT(settings_game_button)


NEW_SCRIPT(quit_game_button)
	GET_READY_PARAMETERS();
	SET_ATTRIBUTES_COUNT(1);


	bool *active = &this->attribute[0].b;

	Frame *frame = (Frame*) this->object;
	Button *button = (Button*) frame->button;

	if (!button->checked) button->checked = active;

	if ((*button->checked)) {
		
		queue_push(&callQueue, NULL);
		*button->checked = false;
	}

END_SCRIPT(quit_game_button)